upstream api {
    server 127.0.0.1:8080; #SERVER_PROXY
    #server 127.0.0.1:8081 backup;  #热备
}

#server {
#    listen       80;
#    server_name  _;
#    rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
#}

server {
    listen              80;
    listen              443 ssl;
    server_name         _; #SERVER_NAME

    ssl_certificate      /etc/nginx/cert/server.crt;
    ssl_certificate_key  /etc/nginx/cert/server.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    client_max_body_size 200m;

    access_log  /var/log/nginx/access.log  main;

    location / {
        root /usr/share/nginx/static; #LOCATION_ROOT
    }

    location ^~/api {
        proxy_pass http://api/;     #代理，可以使用if ($host ~* dev) { proxy_pass http://dev; }配置，location使用/
        proxy_set_header            Host                    $host;
        proxy_set_header            X-Forwarded-For         $remote_addr;
        expires                     -1s;                    # 缓存过期时间，-1不缓存
        client_max_body_size        10m;                    # 允许客户端请求的最大单文件字节数
        client_body_buffer_size     128k;                   # 缓冲区代理缓冲用户端请求的最大字节数，
        proxy_connect_timeout       90;                     # nginx跟后端服务器连接超时时间(代理连接超时)
        proxy_send_timeout          90;                     # 后端服务器数据回传时间(代理发送超时)
        proxy_read_timeout          90;                     # 连接成功后，后端服务器响应时间(代理接收超时)
        proxy_buffer_size           4k;                     # 设置代理服务器（nginx）保存用户头信息的缓冲区大小
        proxy_buffers               4 32k;                  # proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
        proxy_busy_buffers_size     64k;                    # 高负荷下缓冲大小（proxy_buffers*2）
        proxy_temp_file_write_size  64k;                    # 设定缓存文件夹大小，大于这个值，将从upstream服务器传
    }

}
